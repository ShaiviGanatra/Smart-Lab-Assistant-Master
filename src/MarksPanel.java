import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author KriShaivi
 */
public class MarksPanel extends javax.swing.JPanel {
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement preparedStatement = null;
    /**
     * Creates new form MarksPanel
     */
    static{
        sql = "SELECT * FROM studentmarks ORDER BY batch ASC";
    }
    public MarksPanel() {
        initComponents();
        conn = SlamSqlConnect.connectDb();
        updatejMarksTableData(MarksPanel.sql);
        lblStudentmarksid.setVisible(false);
        txtStudentmarksid.setVisible(false);
        btnUpdate.setRolloverIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkUpdateM.png"));
        btnDelete.setRolloverIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkDeleteM.png"));
        btnClear.setRolloverIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkClearM.png"));
        btnSave.setRolloverIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkSaveM.png"));
        subjectCmb.removeAllItems();
        nameCmb.removeAllItems();
        txtSearch.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                searchFilter();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                searchFilter();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {}
        });
    }
    
    private void searchFilter(){
        String key = txtSearch.getText();
        String sql = "SELECT * FROM studentmarks WHERE name LIKE '%"+key+"%'";
        updatejMarksTableData(sql);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        searchSep = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblExperimentNo = new javax.swing.JLabel();
        lblC = new javax.swing.JLabel();
        lblP = new javax.swing.JLabel();
        lblA = new javax.swing.JLabel();
        lblDOP = new javax.swing.JLabel();
        lblDOS = new javax.swing.JLabel();
        txtExperimentNo = new javax.swing.JTextField();
        experimentnoSep = new javax.swing.JSeparator();
        cmbC = new javax.swing.JComboBox<>();
        cmbP = new javax.swing.JComboBox<>();
        cmbA = new javax.swing.JComboBox<>();
        jdcDOP = new com.toedter.calendar.JDateChooser();
        jdcDOS = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMarksTableData = new javax.swing.JTable();
        lblStudentmarksid = new javax.swing.JLabel();
        txtStudentmarksid = new javax.swing.JTextField();
        lblBatch = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        subjectCmb = new javax.swing.JComboBox<>();
        batchCmb = new javax.swing.JComboBox<>();
        nameCmb = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1400, 750));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(81, 29, 31));
        jPanel1.setFocusTraversalPolicyProvider(true);
        jPanel1.setPreferredSize(new java.awt.Dimension(433, 99));

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SlamImages/lightSaveM.png"))); // NOI18N
        btnSave.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnSaveFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnSaveFocusLost(evt);
            }
        });
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSaveMouseExited(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SlamImages/lightUpdateM.png"))); // NOI18N
        btnUpdate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnUpdateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnUpdateFocusLost(evt);
            }
        });
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdateMouseExited(evt);
            }
        });
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SlamImages/lightDeleteM.png"))); // NOI18N
        btnDelete.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnDeleteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnDeleteFocusLost(evt);
            }
        });
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeleteMouseExited(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(255, 255, 255));
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SlamImages/lightClearM.png"))); // NOI18N
        btnClear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnClearFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnClearFocusLost(evt);
            }
        });
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnClearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearMouseExited(evt);
            }
        });
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lblSearch.setFont(new java.awt.Font("Arima Madurai Black", 0, 20)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(242, 84, 91));
        lblSearch.setText("Search");

        txtSearch.setBackground(new java.awt.Color(81, 29, 31));
        txtSearch.setFont(new java.awt.Font("Arima Madurai Black", 0, 18)); // NOI18N
        txtSearch.setForeground(new java.awt.Color(255, 255, 255));
        txtSearch.setBorder(null);
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        searchSep.setBackground(new java.awt.Color(242, 84, 91));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(748, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchSep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnClear)
                        .addComponent(btnDelete)
                        .addComponent(btnUpdate)
                        .addComponent(btnSave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchSep, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        lblName.setFont(new java.awt.Font("Arima Madurai Black", 1, 30)); // NOI18N
        lblName.setForeground(new java.awt.Color(242, 84, 91));
        lblName.setText("Name");

        lblExperimentNo.setFont(new java.awt.Font("Arima Madurai Black", 1, 30)); // NOI18N
        lblExperimentNo.setForeground(new java.awt.Color(242, 84, 91));
        lblExperimentNo.setText("Experiment No.");

        lblC.setFont(new java.awt.Font("Arima Madurai Black", 1, 30)); // NOI18N
        lblC.setForeground(new java.awt.Color(242, 84, 91));
        lblC.setText("C");

        lblP.setFont(new java.awt.Font("Arima Madurai Black", 1, 30)); // NOI18N
        lblP.setForeground(new java.awt.Color(242, 84, 91));
        lblP.setText("P");

        lblA.setFont(new java.awt.Font("Arima Madurai Black", 1, 30)); // NOI18N
        lblA.setForeground(new java.awt.Color(242, 84, 91));
        lblA.setText("A");

        lblDOP.setFont(new java.awt.Font("Arima Madurai Black", 1, 30)); // NOI18N
        lblDOP.setForeground(new java.awt.Color(242, 84, 91));
        lblDOP.setText("DOP");

        lblDOS.setFont(new java.awt.Font("Arima Madurai Black", 1, 30)); // NOI18N
        lblDOS.setForeground(new java.awt.Color(242, 84, 91));
        lblDOS.setText("DOS");

        txtExperimentNo.setFont(new java.awt.Font("Arima Madurai Black", 0, 24)); // NOI18N
        txtExperimentNo.setBorder(null);
        txtExperimentNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtExperimentNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtExperimentNoFocusLost(evt);
            }
        });
        txtExperimentNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtExperimentNoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtExperimentNoMouseExited(evt);
            }
        });

        experimentnoSep.setBackground(new java.awt.Color(242, 84, 91));

        cmbC.setFont(new java.awt.Font("Arima Madurai Black", 0, 18)); // NOI18N
        cmbC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4" }));
        cmbC.setSelectedIndex(-1);
        cmbC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbCFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbCFocusLost(evt);
            }
        });
        cmbC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbCMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmbCMouseExited(evt);
            }
        });
        cmbC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCActionPerformed(evt);
            }
        });

        cmbP.setFont(new java.awt.Font("Arima Madurai Black", 0, 18)); // NOI18N
        cmbP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4" }));
        cmbP.setSelectedIndex(-1);
        cmbP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbPFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbPFocusLost(evt);
            }
        });
        cmbP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmbPMouseExited(evt);
            }
        });

        cmbA.setFont(new java.awt.Font("Arima Madurai Black", 0, 18)); // NOI18N
        cmbA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2" }));
        cmbA.setSelectedIndex(-1);
        cmbA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbAFocusLost(evt);
            }
        });
        cmbA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmbAMouseExited(evt);
            }
        });
        cmbA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAActionPerformed(evt);
            }
        });

        jdcDOP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jdcDOPFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jdcDOPFocusLost(evt);
            }
        });
        jdcDOP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jdcDOPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jdcDOPMouseExited(evt);
            }
        });

        jdcDOS.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jdcDOSFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jdcDOSFocusLost(evt);
            }
        });
        jdcDOS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jdcDOSMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jdcDOSMouseExited(evt);
            }
        });

        jMarksTableData.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jMarksTableData.setForeground(new java.awt.Color(81, 29, 31));
        jMarksTableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jMarksTableData.setRowHeight(25);
        jMarksTableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMarksTableDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jMarksTableData);

        lblStudentmarksid.setText("StudentMarksId");

        txtStudentmarksid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentmarksidActionPerformed(evt);
            }
        });

        lblBatch.setFont(new java.awt.Font("Arima Madurai Black", 1, 30)); // NOI18N
        lblBatch.setForeground(new java.awt.Color(242, 84, 91));
        lblBatch.setText("Batch");

        jLabel2.setFont(new java.awt.Font("Arima Madurai Black", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(242, 84, 91));
        jLabel2.setText("Subject Name");

        subjectCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectCmbActionPerformed(evt);
            }
        });

        batchCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C" }));
        batchCmb.setSelectedIndex(-1);
        batchCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batchCmbActionPerformed(evt);
            }
        });

        nameCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameCmbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBatch, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batchCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtStudentmarksid, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblC, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(100, 100, 100)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(100, 100, 100)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblA, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblStudentmarksid)))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblExperimentNo, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(nameCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtExperimentNo, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(experimentnoSep, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subjectCmb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblDOP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jdcDOP, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblDOS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jdcDOS, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBatch)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(batchCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(lblExperimentNo))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtExperimentNo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(experimentnoSep, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(nameCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblP)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblC)
                        .addComponent(lblA)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDOS)
                    .addComponent(lblDOP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdcDOP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdcDOS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(lblStudentmarksid)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtStudentmarksid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1376, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCActionPerformed

    private void fillSubjectCmb(String batch){
        try{
            String sql = "SELECT subjectname FROM subject WHERE batch="+batch;
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            subjectCmb.removeAllItems();
            while(rs.next()){
                subjectCmb.addItem(rs.getString("subjectname"));
            }
        }catch(Exception e){
            
        }
    }
    private void fillNameCmb(String batch){
        try{
            String sql = "SELECT name FROM student WHERE batch="+batch;
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            nameCmb.removeAllItems();
            while(rs.next()){
                nameCmb.addItem(rs.getString("name"));
            }
        }catch(Exception e){
        }       
    }
    private void updatejMarksTableData(String sql){
        //String sql = "SELECT * FROM studentmarks ORDER BY batch ASC";
        try{
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            jMarksTableData.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Issue:"+e.getMessage());
        }
        finally{
            try{
            rs.close();
            preparedStatement.close();
            }
            catch(Exception e){
            JOptionPane.showMessageDialog(null,"Issue:"+e.getMessage());    
            }
        }
    }
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try{
            String sql = "UPDATE studentmarks SET batch = ?, subjectname = ?,"
                    + "studentname = ?,experimentno = ?, C = ?,"
                    + "P = ?, A = ?, DOP = ?, DOS = ? WHERE studentmarksid = ?";
        preparedStatement = conn.prepareStatement(sql);
        preparedStatement.setString(1, batchCmb.getSelectedItem().toString());
        preparedStatement.setString(2, subjectCmb.getSelectedItem().toString());
        preparedStatement.setString(3, nameCmb.getSelectedItem().toString());
        preparedStatement.setString(4, txtExperimentNo.getText());
        preparedStatement.setString(5, cmbC.getSelectedItem().toString());
        preparedStatement.setString(6, cmbP.getSelectedItem().toString());
        preparedStatement.setString(7, cmbA.getSelectedItem().toString());
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String strDOP = sdf.format(jdcDOP.getDate());
        preparedStatement.setString(8,strDOP);
        String strDOS = sdf.format(jdcDOS.getDate());
        preparedStatement.setString(9,strDOS);
        preparedStatement.execute();
            JOptionPane.showMessageDialog(null,"Record Updated Successfully");
            updatejMarksTableData(MarksPanel.sql);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Issue:"+e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        try{
        String sql = "INSERT INTO studentmarks(batch,subjectname,studentname,experimentno, C, P, A, DOP, DOS) "
                + "VALUES(?, ?, ?, ?, ?, ?, ?,?,?)";
        preparedStatement = conn.prepareStatement(sql);
        preparedStatement.setString(1, batchCmb.getSelectedItem().toString());
        preparedStatement.setString(2, subjectCmb.getSelectedItem().toString());
        preparedStatement.setString(3, nameCmb.getSelectedItem().toString());
        preparedStatement.setString(4, txtExperimentNo.getText());
        preparedStatement.setString(5, cmbC.getSelectedItem().toString());
        preparedStatement.setString(6, cmbP.getSelectedItem().toString());
        preparedStatement.setString(7, cmbA.getSelectedItem().toString());
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String strDOP = sdf.format(jdcDOP.getDate());
        preparedStatement.setString(8,strDOP);
        String strDOS = sdf.format(jdcDOS.getDate());
        preparedStatement.setString(9,strDOS);
        preparedStatement.execute();
        updatejMarksTableData(MarksPanel.sql);
        JOptionPane.showMessageDialog(null, "Record inserted Successfully!");
       }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Issue:"+e.getMessage());
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtStudentmarksidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentmarksidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStudentmarksidActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void clear(){
        batchCmb.setSelectedIndex(-1);
        subjectCmb.setSelectedIndex(-1);
        nameCmb.setSelectedIndex(-1);
        txtExperimentNo.setText("");
        cmbC.setSelectedIndex(-1);
        cmbP.setSelectedIndex(-1);
        cmbA.setSelectedIndex(-1);
        jdcDOP.setDate(null);
        jdcDOS.setDate(null);
    }
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void jMarksTableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMarksTableDataMouseClicked
        // TODO add your handling code here:
        int selectedRow = jMarksTableData.getSelectedRow();
        String selectedAid = jMarksTableData.getModel().getValueAt(selectedRow, 0).toString();
        try{
            String sql = "SELECT * FROM studentmarks WHERE studentmarksid = " + selectedAid;
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            if(rs.next()){
                txtStudentmarksid.setText(rs.getString("studentmarksid"));
                batchCmb.setSelectedItem(rs.getString("batch"));
                subjectCmb.setSelectedItem(rs.getString("subjectname"));
                nameCmb.setSelectedItem(rs.getString("studentname"));
                txtExperimentNo.setText(rs.getString("experimentno"));
                cmbC.setSelectedItem(rs.getString("C"));
                cmbP.setSelectedItem(rs.getString("P"));
                cmbA.setSelectedItem(rs.getString("A"));
                String selectedDOP = rs.getString("DOP");
                Date dateDOP = new SimpleDateFormat("yyyy-MM-dd").parse(selectedDOP);
                jdcDOP.setDate(dateDOP);
                String selectedDOS = rs.getString("DOS");
                Date dateDOS = new SimpleDateFormat("yyyy-MM-dd").parse(selectedDOS);
                jdcDOS.setDate(dateDOS);
            }
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_jMarksTableDataMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if("".equals(txtStudentmarksid.getText())){
            JOptionPane.showMessageDialog(null,"Please select record to delete");
        }
        else{
            int btn = JOptionPane.showConfirmDialog(null,"Are you sure you wanna delete the record?","Delete",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
            if(btn == JOptionPane.YES_OPTION){
                try{
                    String sql = "DELETE FROM studentmarks WHERE studentmarksid = ?";
                    preparedStatement = conn.prepareStatement(sql);
                    preparedStatement.setInt(1, Integer.parseInt(txtStudentmarksid.getText()));
                    preparedStatement.execute();
                    JOptionPane.showMessageDialog(null,"Record Deleted Successfully!");
                    updatejMarksTableData(MarksPanel.sql);
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null,"Issue:"+e.getMessage());
                }
                finally{
                    try{
                        preparedStatement.close();
                    }
                    catch(Exception e){}
                }
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtExperimentNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtExperimentNoFocusGained
        // TODO add your handling code here:
        lblExperimentNo.setForeground(new Color(81,29,31));
        experimentnoSep.setBackground(new Color(81,29,31));
    }//GEN-LAST:event_txtExperimentNoFocusGained

    private void txtExperimentNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtExperimentNoFocusLost
        // TODO add your handling code here:
        lblExperimentNo.setForeground(new Color(242,84,91));
        experimentnoSep.setBackground(new Color(242,84,91));
    }//GEN-LAST:event_txtExperimentNoFocusLost

    private void cmbCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbCFocusGained
        // TODO add your handling code here:
        lblC.setForeground(new Color(81,29,31));
    }//GEN-LAST:event_cmbCFocusGained

    private void cmbCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbCFocusLost
        // TODO add your handling code here:
        lblC.setForeground(new Color(242,84,91));
    }//GEN-LAST:event_cmbCFocusLost

    private void cmbPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbPFocusGained
        // TODO add your handling code here:
        lblP.setForeground(new Color(81,29,31));
    }//GEN-LAST:event_cmbPFocusGained

    private void cmbPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbPFocusLost
        // TODO add your handling code here:
        lblP.setForeground(new Color(242,84,91));
    }//GEN-LAST:event_cmbPFocusLost

    private void cmbAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbAFocusGained
        // TODO add your handling code here:
        lblA.setForeground(new Color(81,29,31));
    }//GEN-LAST:event_cmbAFocusGained

    private void cmbAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbAFocusLost
        // TODO add your handling code here:
        lblA.setForeground(new Color(242,84,91));
    }//GEN-LAST:event_cmbAFocusLost

    private void jdcDOPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdcDOPFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jdcDOPFocusGained

    private void jdcDOPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdcDOPFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jdcDOPFocusLost

    private void jdcDOSFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdcDOSFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jdcDOSFocusGained

    private void jdcDOSFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdcDOSFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jdcDOSFocusLost

    private void cmbCMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbCMouseEntered
        // TODO add your handling code here:
        lblC.setForeground(new Color(81,29,31));
    }//GEN-LAST:event_cmbCMouseEntered

    private void cmbCMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbCMouseExited
        // TODO add your handling code here:
        lblC.setForeground(new Color(242,84,91));
    }//GEN-LAST:event_cmbCMouseExited

    private void cmbPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbPMouseEntered
        // TODO add your handling code here:
        lblP.setForeground(new Color(81,29,31));
    }//GEN-LAST:event_cmbPMouseEntered

    private void cmbPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbPMouseExited
        // TODO add your handling code here:
        lblP.setForeground(new Color(242,84,91));
    }//GEN-LAST:event_cmbPMouseExited

    private void cmbAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbAMouseEntered
        // TODO add your handling code here:
        lblA.setForeground(new Color(81,29,31));
    }//GEN-LAST:event_cmbAMouseEntered

    private void cmbAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbAMouseExited
        // TODO add your handling code here:
        lblA.setForeground(new Color(242,84,91));
    }//GEN-LAST:event_cmbAMouseExited

    private void txtExperimentNoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtExperimentNoMouseEntered
        // TODO add your handling code here:
        lblExperimentNo.setForeground(new Color(81,29,31));
        experimentnoSep.setBackground(new Color(81,29,31));
    }//GEN-LAST:event_txtExperimentNoMouseEntered

    private void txtExperimentNoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtExperimentNoMouseExited
        // TODO add your handling code here:
        if(!txtExperimentNo.hasFocus()){
        lblExperimentNo.setForeground(new Color(242,84,91));
        experimentnoSep.setBackground(new Color(242,84,91));
        }
    }//GEN-LAST:event_txtExperimentNoMouseExited

    private void jdcDOPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdcDOPMouseEntered
        // TODO add your handling code here:
        lblDOP.setForeground(new Color(81,29,31));
    }//GEN-LAST:event_jdcDOPMouseEntered

    private void jdcDOPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdcDOPMouseExited
        // TODO add your handling code here:
        lblDOP.setForeground(new Color(242,84,91));
    }//GEN-LAST:event_jdcDOPMouseExited

    private void jdcDOSMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdcDOSMouseEntered
        // TODO add your handling code here:
        lblDOS.setForeground(new Color(81,29,31));
    }//GEN-LAST:event_jdcDOSMouseEntered

    private void jdcDOSMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdcDOSMouseExited
        // TODO add your handling code here:
        lblDOS.setForeground(new Color(242,84,91));
    }//GEN-LAST:event_jdcDOSMouseExited

    private void btnSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseEntered
        // TODO add your handling code here:));
    }//GEN-LAST:event_btnSaveMouseEntered

    private void btnSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveMouseExited

    private void btnUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateMouseEntered

    private void btnUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateMouseExited

    private void btnDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteMouseEntered

    private void btnDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteMouseExited

    private void btnClearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearMouseEntered

    private void btnClearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearMouseExited

    private void btnSaveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnSaveFocusGained
        // TODO add your handling code here:
        btnSave.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkSaveM.png"));
    }//GEN-LAST:event_btnSaveFocusGained

    private void btnSaveFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnSaveFocusLost
        // TODO add your handling code here:
        btnSave.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\lightSaveM.png"));
    }//GEN-LAST:event_btnSaveFocusLost

    private void btnUpdateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnUpdateFocusGained
        // TODO add your handling code here:
        btnUpdate.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkUpdateM.png"));
    }//GEN-LAST:event_btnUpdateFocusGained

    private void btnUpdateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnUpdateFocusLost
        // TODO add your handling code here:
        btnUpdate.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\lightUpdateM.png"));
    }//GEN-LAST:event_btnUpdateFocusLost

    private void btnDeleteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnDeleteFocusGained
        // TODO add your handling code here:
        btnDelete.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkDeleteM.png"));
    }//GEN-LAST:event_btnDeleteFocusGained

    private void btnDeleteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnDeleteFocusLost
        // TODO add your handling code here:
        btnDelete.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\lightDeleteM.png"));
    }//GEN-LAST:event_btnDeleteFocusLost

    private void btnClearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnClearFocusGained
        // TODO add your handling code here:
        btnClear.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkClearM.png"));
    }//GEN-LAST:event_btnClearFocusGained

    private void btnClearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnClearFocusLost
        // TODO add your handling code here:
        btnClear.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\lightClearM.png"));
    }//GEN-LAST:event_btnClearFocusLost

    private void cmbAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAActionPerformed

    private void subjectCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectCmbActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_subjectCmbActionPerformed

    private void batchCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batchCmbActionPerformed
        // TODO add your handling code here:
        if("A".equals(batchCmb.getSelectedItem().toString())){
            fillSubjectCmb("'A'");
            fillNameCmb("'A'");            
        }
        else if("B".equals(batchCmb.getSelectedItem().toString())){
            fillSubjectCmb("'B'");
            fillNameCmb("'B'");
        }
        else if("C".equals(batchCmb.getSelectedItem().toString())){
            fillSubjectCmb("'C'");
            fillNameCmb("'C'");
        }
    }//GEN-LAST:event_batchCmbActionPerformed

    private void nameCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameCmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameCmbActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> batchCmb;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbA;
    private javax.swing.JComboBox<String> cmbC;
    private javax.swing.JComboBox<String> cmbP;
    private javax.swing.JSeparator experimentnoSep;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTable jMarksTableData;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcDOP;
    private com.toedter.calendar.JDateChooser jdcDOS;
    private javax.swing.JLabel lblA;
    private javax.swing.JLabel lblBatch;
    private javax.swing.JLabel lblC;
    private javax.swing.JLabel lblDOP;
    private javax.swing.JLabel lblDOS;
    private javax.swing.JLabel lblExperimentNo;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblP;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblStudentmarksid;
    private javax.swing.JComboBox<String> nameCmb;
    private javax.swing.JSeparator searchSep;
    private javax.swing.JComboBox<String> subjectCmb;
    private javax.swing.JTextField txtExperimentNo;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStudentmarksid;
    // End of variables declaration//GEN-END:variables
    static final String sql;
}
