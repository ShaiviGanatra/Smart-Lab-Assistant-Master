
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author KriShaivi
 */
public class AttendancePanel extends javax.swing.JPanel {
    protected static Connection conn = null;
    protected static PreparedStatement preparedStatement = null;
    ResultSet rs = null;
    /**
     * Creates new form AttendancePanel
     */
    public AttendancePanel() {
        initComponents();
        conn = SlamSqlConnect.connectDb();
        lblAttendanceId.setVisible(false);
        txtAttendanceId.setVisible(false);
        rbtntemp.setVisible(false);
        btnUpdate.setRolloverIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkUpdateA.png"));
        btnDelete.setRolloverIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkDeleteA.png"));
        btnClear.setRolloverIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkClearA.png"));
        btnSave.setRolloverIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkSaveA.png"));
        updatejAttendanceMarkTableData();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnClear = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        searchSep = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        lblBatch = new javax.swing.JLabel();
        rbtnA = new javax.swing.JRadioButton();
        rbtnB = new javax.swing.JRadioButton();
        rbtnC = new javax.swing.JRadioButton();
        rbtntemp = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jAttendanceTableData = new javax.swing.JTable();
        lblAttendanceId = new javax.swing.JLabel();
        txtAttendanceId = new javax.swing.JTextField();
        lblSubject = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        txtSubject = new javax.swing.JTextField();
        jdcDate = new com.toedter.calendar.JDateChooser();
        subjectSep = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jAttendanceMarkTableData = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1400, 750));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(64, 23, 61));

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SlamImages/lightClearA.png"))); // NOI18N
        btnClear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnClearFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnClearFocusLost(evt);
            }
        });
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnClearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearMouseExited(evt);
            }
        });
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SlamImages/lightDeleteA.png"))); // NOI18N
        btnDelete.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnDeleteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnDeleteFocusLost(evt);
            }
        });
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeleteMouseExited(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SlamImages/lightUpdateA.png"))); // NOI18N
        btnUpdate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnUpdateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnUpdateFocusLost(evt);
            }
        });
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdateMouseExited(evt);
            }
        });
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SlamImages/lightSaveA.png"))); // NOI18N
        btnSave.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnSaveFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnSaveFocusLost(evt);
            }
        });
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSaveMouseExited(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblSearch.setFont(new java.awt.Font("Arima Madurai Black", 0, 20)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(233, 82, 222));
        lblSearch.setText("Search");

        txtSearch.setBackground(new java.awt.Color(64, 23, 61));
        txtSearch.setFont(new java.awt.Font("Arima Madurai Black", 0, 18)); // NOI18N
        txtSearch.setBorder(null);

        searchSep.setBackground(new java.awt.Color(233, 82, 222));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(searchSep, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(lblSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchSep, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClear)
                            .addComponent(btnDelete)
                            .addComponent(btnUpdate)
                            .addComponent(btnSave))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
        });

        lblBatch.setBackground(new java.awt.Color(255, 255, 255));
        lblBatch.setFont(new java.awt.Font("Arima Madurai Black", 1, 30)); // NOI18N
        lblBatch.setForeground(new java.awt.Color(233, 82, 222));
        lblBatch.setText("Batch");

        rbtnA.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rbtnA);
        rbtnA.setFont(new java.awt.Font("Arima Madurai Black", 0, 24)); // NOI18N
        rbtnA.setText("A");
        rbtnA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rbtnAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rbtnAMouseExited(evt);
            }
        });
        rbtnA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnAActionPerformed(evt);
            }
        });

        rbtnB.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rbtnB);
        rbtnB.setFont(new java.awt.Font("Arima Madurai Black", 0, 24)); // NOI18N
        rbtnB.setText("B");
        rbtnB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rbtnBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rbtnBMouseExited(evt);
            }
        });
        rbtnB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnBActionPerformed(evt);
            }
        });

        rbtnC.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rbtnC);
        rbtnC.setFont(new java.awt.Font("Arima Madurai Black", 0, 24)); // NOI18N
        rbtnC.setText("C");
        rbtnC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rbtnCMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rbtnCMouseExited(evt);
            }
        });
        rbtnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtntemp);
        rbtntemp.setText("temp");
        rbtntemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtntempActionPerformed(evt);
            }
        });

        jAttendanceTableData.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jAttendanceTableData.setForeground(new java.awt.Color(64, 23, 61));
        jAttendanceTableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jAttendanceTableData.setRowHeight(25);
        jAttendanceTableData.getTableHeader().setReorderingAllowed(false);
        jAttendanceTableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jAttendanceTableDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jAttendanceTableData);

        lblAttendanceId.setText("AttendanceId");

        lblSubject.setFont(new java.awt.Font("Arima Madurai Black", 1, 30)); // NOI18N
        lblSubject.setForeground(new java.awt.Color(233, 82, 222));
        lblSubject.setText("Subject");

        lblDate.setFont(new java.awt.Font("Arima Madurai Black", 1, 30)); // NOI18N
        lblDate.setForeground(new java.awt.Color(233, 82, 222));
        lblDate.setText("Date");

        txtSubject.setFont(new java.awt.Font("Arima Madurai Black", 0, 24)); // NOI18N
        txtSubject.setBorder(null);
        txtSubject.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSubjectFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSubjectFocusLost(evt);
            }
        });
        txtSubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtSubjectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtSubjectMouseExited(evt);
            }
        });
        txtSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubjectActionPerformed(evt);
            }
        });

        jdcDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jdcDateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jdcDateMouseExited(evt);
            }
        });

        subjectSep.setBackground(new java.awt.Color(233, 82, 222));

        jScrollPane2.setPreferredSize(new java.awt.Dimension(450, 400));

        jAttendanceMarkTableData.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jAttendanceMarkTableData.setForeground(new java.awt.Color(64, 23, 61));
        jAttendanceMarkTableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jAttendanceMarkTableData.setRowHeight(25);
        jAttendanceMarkTableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jAttendanceMarkTableDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jAttendanceMarkTableData);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtAttendanceId, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblAttendanceId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblBatch, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbtnC)
                            .addComponent(rbtnA)
                            .addComponent(rbtnB)
                            .addComponent(rbtntemp)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(subjectSep, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jdcDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSubject, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblSubject, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(lblSubject)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subjectSep, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jdcDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(lblBatch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtnA, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rbtnB, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rbtnC, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(rbtntemp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(lblAttendanceId)
                .addGap(18, 18, 18)
                .addComponent(txtAttendanceId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updatejAttendanceMarkTableData(){
        String sql = "SELECT * FROM attendance";
        try{
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            jAttendanceMarkTableData.setModel(DbUtils.resultSetToTableModel(rs));
            for(int i =0,j=4;i<(jAttendanceMarkTableData.getRowCount());i++){
                if(("true").equals(jAttendanceMarkTableData.getValueAt(i, j))){
                    jAttendanceMarkTableData.setValueAt("Present", i, j);
                }
                else{
                    jAttendanceMarkTableData.setValueAt("Absent", i, j);
                }
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Issue:"+e.getMessage());
        }
        finally{
            try{
            rs.close();
            preparedStatement.close();
            }
            catch(Exception e){
            JOptionPane.showMessageDialog(null,"Issue:"+e.getMessage());    
            }
        }
    } 
    private TableModel toTableModel(String batch){

        model = new DefaultTableModel(new Object[] { "Student ID" , "Name" , "Enrollment No." , "Batch" , "Attendence" },0){
            public Class getColumnClass(int column)
            {
                if (column == 4)
                {
                    return Boolean.class;
                }
                else
                {
                    return getValueAt(0, column).getClass();
                }
            }
        };

        String sql = "SELECT sid , name,enrollmentno,batch FROM student WHERE batch ="+batch+"ORDER BY enrollmentno ASC";
        try{
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            while(rs.next())
            {
                model.addRow(new Object[] { rs.getInt("sid") , rs.getString("name") , rs.getInt("enrollmentno") , 
                    rs.getString("batch") , false });
            }
    }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Issue:"+e.getMessage());
        }
        finally{
            try{
            rs.close();
            preparedStatement.close();
            }
            catch(Exception e){
            JOptionPane.showMessageDialog(null,"Issue:"+e.getMessage());    
            }
        }
            return model;
    }
    
    private void updateJAttendanceTableData(String batch){        
        String sql = "SELECT COUNT(*) as count FROM student WHERE batch ="+batch+"ORDER BY enrollmentno ASC";
        try {
            preparedStatement = conn.prepareStatement(sql);
            java.sql.ResultSet rs = preparedStatement.executeQuery();
            if(rs.next())
            {
                jAttendanceTableData.setModel(toTableModel(batch));
            }
        } catch (Exception e) {
        }finally{
            jAttendanceTableData.getModel().addTableModelListener(new CheckBoxModelListener());
        }
    }
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:        
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        updatejAttendanceMarkTableData();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if("".equals(txtAttendanceId.getText())){
            JOptionPane.showMessageDialog(null,"Please select record to delete");
        }
        else{
            int btn = JOptionPane.showConfirmDialog(null,"Are you sure you wanna delete the record?","Delete",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
            if(btn == JOptionPane.YES_OPTION){
                try{
                    String sql = "DELETE FROM attendance WHERE attendanceid = ?";
                    preparedStatement = conn.prepareStatement(sql);
                    preparedStatement.setInt(1, Integer.parseInt(txtAttendanceId.getText()));
                    preparedStatement.execute();
                    JOptionPane.showMessageDialog(null,"Record Deleted Successfully!");
                    updatejAttendanceMarkTableData();
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null,"Issue:"+e.getMessage());
                }
                finally{
                    try{
                        preparedStatement.close();
                    }
                    catch(Exception e){}
                }
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveMouseEntered

    private void btnSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveMouseExited

    private void btnUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateMouseEntered

    private void btnUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateMouseExited

    private void btnDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteMouseEntered

    private void btnDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteMouseExited

    private void btnClearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearMouseEntered

    private void btnClearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearMouseExited

    private void jAttendanceTableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAttendanceTableDataMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jAttendanceTableDataMouseClicked

    private void rbtntempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtntempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtntempActionPerformed

    private void rbtnBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnBActionPerformed
        // TODO add your handling code here:
        updateJAttendanceTableData("'B'");
        updatejAttendanceMarkTableData();
    }//GEN-LAST:event_rbtnBActionPerformed

    private void rbtnBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtnBMouseExited
        // TODO add your handling code here:
        lblBatch.setBackground(new Color(233,82,222));
    }//GEN-LAST:event_rbtnBMouseExited

    private void rbtnBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtnBMouseEntered
        // TODO add your handling code here:
        lblBatch.setBackground(new Color(64,23,61));
    }//GEN-LAST:event_rbtnBMouseEntered

    private void rbtnAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnAActionPerformed
        // TODO add your handling code here:
        updateJAttendanceTableData("'A'");
        updatejAttendanceMarkTableData();
    }//GEN-LAST:event_rbtnAActionPerformed

    private void rbtnAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtnAMouseExited
        // TODO add your handling code here:
        lblBatch.setBackground(new Color(233,82,222));
    }//GEN-LAST:event_rbtnAMouseExited

    private void rbtnAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtnAMouseEntered
        // TODO add your handling code here:
        lblBatch.setBackground(new Color(64,23,61));
    }//GEN-LAST:event_rbtnAMouseEntered

    private void rbtnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCActionPerformed
        // TODO add your handling code here:
        updateJAttendanceTableData("'C'");
        updatejAttendanceMarkTableData();
    }//GEN-LAST:event_rbtnCActionPerformed

    private void btnSaveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnSaveFocusGained
        // TODO add your handling code here:
        btnSave.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkSaveA.png"));
    }//GEN-LAST:event_btnSaveFocusGained

    private void btnSaveFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnSaveFocusLost
        // TODO add your handling code here:
        btnSave.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\lightSaveA.png"));
    }//GEN-LAST:event_btnSaveFocusLost

    private void btnUpdateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnUpdateFocusGained
        // TODO add your handling code here:
        btnUpdate.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkUpdateA.png"));
    }//GEN-LAST:event_btnUpdateFocusGained

    private void btnUpdateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnUpdateFocusLost
        // TODO add your handling code here:
        btnUpdate.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\lightUpdateA.png"));
    }//GEN-LAST:event_btnUpdateFocusLost

    private void btnDeleteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnDeleteFocusGained
        // TODO add your handling code here:
        btnDelete.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkDeleteA.png"));
    }//GEN-LAST:event_btnDeleteFocusGained

    private void btnDeleteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnDeleteFocusLost
        // TODO add your handling code here:
        btnDelete.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\lightDeleteA.png"));
    }//GEN-LAST:event_btnDeleteFocusLost

    private void btnClearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnClearFocusGained
        // TODO add your handling code here:
        btnClear.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\darkClearA.png"));
    }//GEN-LAST:event_btnClearFocusGained

    private void btnClearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnClearFocusLost
        // TODO add your handling code here:
        btnClear.setIcon(new ImageIcon("C:\\Users\\KriShaivi\\Desktop\\Advance Java\\SlamProject\\src\\SlamImages\\lightClearA.png"));
    }//GEN-LAST:event_btnClearFocusLost

    private void txtSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubjectActionPerformed

    private void jAttendanceMarkTableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAttendanceMarkTableDataMouseClicked
        // TODO add your handling code here:
        
        int selectedRow = jAttendanceMarkTableData.getSelectedRow();
        String selectedAid = jAttendanceMarkTableData.getModel().getValueAt(selectedRow, 0).toString();
        try{
            String sql = "SELECT * FROM attendance WHERE attendanceid = " + selectedAid;
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            if(rs.next()){
            txtAttendanceId.setText(rs.getString("attendanceid"));
            String selectedDate = rs.getString("Date");
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(selectedDate);
            jdcDate.setDate(date);
        }

        }
        catch(Exception e){            
        }
    }//GEN-LAST:event_jAttendanceMarkTableDataMouseClicked

    private void txtSubjectFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSubjectFocusGained
        // TODO add your handling code here:
        subjectSep.setBackground(new Color(64,23,61));
        lblSubject.setForeground(new Color(64,23,61));
    }//GEN-LAST:event_txtSubjectFocusGained

    private void txtSubjectFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSubjectFocusLost
        // TODO add your handling code here:
        subjectSep.setBackground(new Color(233,82,222));
        lblSubject.setForeground(new Color(233,82,222));
    }//GEN-LAST:event_txtSubjectFocusLost

    private void txtSubjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSubjectMouseEntered
        // TODO add your handling code here:
        subjectSep.setBackground(new Color(64,23,61));
        lblSubject.setForeground(new Color(64,23,61));
    }//GEN-LAST:event_txtSubjectMouseEntered

    private void txtSubjectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSubjectMouseExited
        // TODO add your handling code here:
        if(!txtSubject.hasFocus()){
        subjectSep.setBackground(new Color(233,82,222));
        lblSubject.setForeground(new Color(233,82,222));
        }
    }//GEN-LAST:event_txtSubjectMouseExited

    private void jdcDateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdcDateMouseEntered
        // TODO add your handling code here:
        jdcDate.setForeground(new Color(64,23,61));
    }//GEN-LAST:event_jdcDateMouseEntered

    private void jdcDateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdcDateMouseExited
        // TODO add your handling code here:
        jdcDate.setForeground(new Color(233,82,222));
    }//GEN-LAST:event_jdcDateMouseExited

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseEntered

    private void rbtnCMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtnCMouseEntered
        // TODO add your handling code here:
        lblBatch.setBackground(new Color(64,23,61));
    }//GEN-LAST:event_rbtnCMouseEntered

    private void rbtnCMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtnCMouseExited
        // TODO add your handling code here:
        lblBatch.setBackground(new Color(233,82,222));
    }//GEN-LAST:event_rbtnCMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    protected static javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTable jAttendanceMarkTableData;
    private javax.swing.JTable jAttendanceTableData;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    protected static com.toedter.calendar.JDateChooser jdcDate;
    private javax.swing.JLabel lblAttendanceId;
    private javax.swing.JLabel lblBatch;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSubject;
    protected static javax.swing.JRadioButton rbtnA;
    protected static javax.swing.JRadioButton rbtnB;
    protected static javax.swing.JRadioButton rbtnC;
    private javax.swing.JRadioButton rbtntemp;
    private javax.swing.JSeparator searchSep;
    private javax.swing.JSeparator subjectSep;
    private javax.swing.JTextField txtAttendanceId;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSubject;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel model;
}



    class CheckBoxModelListener implements TableModelListener {

        public void tableChanged(TableModelEvent e) {
            int row = e.getFirstRow();
            int column = e.getColumn();
            if (column == 4) {
                TableModel model = (TableModel) e.getSource();
                String columnName = model.getColumnName(column);
                Boolean checked = (Boolean) model.getValueAt(row, column);
                if (checked) {
                    String sql = "INSERT INTO attendance ( sid , enrollmentno , date , presentabsent ) "
                            + "VALUES ( ? , ? , ? , ?)";
                    try {
                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                        AttendancePanel.preparedStatement = AttendancePanel.conn.prepareStatement(sql);
                        AttendancePanel.preparedStatement.setInt( 1 , (int) model.getValueAt(row, 0) );
                        AttendancePanel.preparedStatement.setInt( 2 , (int) model.getValueAt(row, 2) );
                        String strDate = sdf.format(AttendancePanel.jdcDate.getDate());
                        AttendancePanel.preparedStatement.setString( 3 ,strDate);
                        AttendancePanel.preparedStatement.setBoolean( 4 , true );
                        AttendancePanel.preparedStatement.execute();
                    } catch (Exception et) {
                    }
                } else {
                    String sql = "DELETE FROM attendance WHERE sid  = ?";
                    try {
                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                        String currentDate = sdf.format(AttendancePanel.jdcDate.getDate());
                        AttendancePanel.preparedStatement = AttendancePanel.conn.prepareStatement(sql);
                        AttendancePanel.preparedStatement.setInt( 1 , (int) model.getValueAt(row, 0) );
                        AttendancePanel.preparedStatement.execute();
                        String selectedBatch = AttendancePanel.buttonGroup1.getSelection().getSelectedObjects().toString();
                        System.out.println(selectedBatch);
                        if("A".equals(selectedBatch))
                        {
                            AttendancePanel.rbtnA.doClick();
                        }else if("B".equals(selectedBatch)){
                            AttendancePanel.rbtnB.doClick();
                        }else{
                            AttendancePanel.rbtnC.doClick();
                        }
                        
                    } catch (Exception et) {
                    }
                }
            }
        }
    }